/********************************************************************
	created:	2011/05/14
	filename: 	DInput8KeyMap.h
	author:		Crazii
	purpose:	
*********************************************************************/
#if BLADE_PLATFORM == BLADE_PLATFORM_WINDOWS

#ifndef __Blade_DInput8KeyMap_h__
#define __Blade_DInput8KeyMap_h__

#include <interface/public/input/IKeyboard.h>

namespace Blade
{

	static const EKeyCode DI8KeyMap[256] = 
	{
		KC_UNDEFINED,

		KC_ESCAPE,		//DIK_ESCAPE

		KC_1,			//DIK_1
		KC_2,
		KC_3,
		KC_4,
		KC_5,
		KC_6,
		KC_7,
		KC_8,
		KC_9,
		KC_0
		,
		KC_MINUS,		//DIK_MINUS
		KC_EQUAL,		//DIK_EQUALS
		KC_BACKSPACE,	//DIK_BACKSPACE
		KC_TAB,			//DIK_TAB
		KC_Q,	
		KC_W,
		KC_E,
		KC_R,
		KC_T,
		KC_Y,
		KC_U,
		KC_I,
		KC_O,
		KC_P,
		KC_LBRACKET,	//DIK_LBRACKET
		KC_RBRACKET,	//DIK_RBRACKET
		KC_ENTER,		//DIK_RETURN
		KC_LCTRL,		//DIK_LCONTROL

		KC_A,
		KC_S,
		KC_D,
		KC_F,
		KC_G,
		KC_H,
		KC_J,
		KC_K,
		KC_L,
		KC_SEMICOLON,	//DIK_SEMICOLON
		KC_APOSTROPHE,	//DIK_APOSTROPHE
		KC_ACCENT,		//DIK_GRAVE
		KC_LSHIFT,		//DIK_LSHIFT
		KC_BACKSLASH,	//DIK_BACKSLASH

		KC_Z,
		KC_X,
		KC_C,
		KC_V,
		KC_B,
		KC_N,
		KC_M,

		KC_COMMA,		//DIK_COMMA
		KC_PERIOD,		//DIK_PERIOD
		KC_SLASH,		//DIK_SLASH
		KC_RSHIFT,		//DIK_RSHIFT
		KC_NUM_MULT,	//DIK_MULTIPLY
		KC_LALT,		//DIK_LMENU
		KC_SPACE,		//DIK_SPACE
		KC_CAPSLOCK,	//DIK_CAPITAL

		KC_F1,			//DIK_F1
		KC_F2,
		KC_F3,
		KC_F4,
		KC_F5,
		KC_F6,
		KC_F7,
		KC_F8,
		KC_F9,
		KC_F10,

		KC_NUM_LOCK,	//DIK_NUMLOCK
		KC_SCROLL_LOCK,	//DIK_SCROLL
		KC_NUM7,
		KC_NUM8,
		KC_NUM9,
		KC_NUM_SUBTRACT,//DIK_SUBTRACT
		KC_NUM4,
		KC_NUM5,
		KC_NUM6,
		KC_NUM_ADD,		//DIK_ADD
		KC_NUM1,
		KC_NUM2,
		KC_NUM3,
		KC_NUM0,
		KC_NUM_DOT,		//DIK_DECIMAL
		KC_BACKSLASH,	//DIK_OEM_102
		KC_F11,
		KC_F12,

		//0x59-0x63
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,

		KC_UNDEFINED,	//KC_F13,	DIK_F13
		KC_UNDEFINED,	//KC_F14,	DIK_F14
		KC_UNDEFINED,	//KC_F15,	DIK_F15

		KC_UNDEFINED,	//DIK_KANA,0x70
		//0x71 - 0x8c
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,

		//0x8d
		KC_UNDEFINED,	//DIK_NUMPADEQUALS
		//0x8f-0x9b
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,
		KC_UNDEFINED,

		KC_NUM_ENTER,	//DIK_NUMPADENTER,0x9C
		KC_RCTRL,		//DIK_RCONTROL

		//0x9e-0xb2
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,

		KC_UNDEFINED,		//DIK_NUMPADCOMMA,0xb3
		KC_UNDEFINED,

		KC_NUM_DIVIDE,	//DIK_DIVIDE,0xb5
		KC_UNDEFINED,
		KC_UNDEFINED,		//DIK_SYSRQ,0xb7
		KC_RALT,		//DIK_RMENU

		//0xb9-0xc4
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,
		KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,KC_UNDEFINED,

		KC_PAUSEBREAK,	//DIK_PAUSE,0xc5
		KC_UNDEFINED,
		KC_HOME,		//DIK_HOME,0xc7
		KC_UP,			//DIK_UP
		KC_PAGEUP,		//DIK_PRIOR,0xc9
		KC_UNDEFINED,
		KC_LEFT,		//DIK_LEFT,0xcb
		KC_UNDEFINED,
		KC_RIGHT,		//DIK_RIGHT,0xcd
		KC_UNDEFINED,
		KC_END,			//DIK_END,0xcf

		KC_DOWN,
		KC_PAGEDOWN,
		KC_INSERT,
		KC_DELETE,
	};
	

}//namespace Blade




#endif // __Blade_DInput8KeyMap_h__


#endif